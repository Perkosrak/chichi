{"version":3,"sources":["img/chichi.jpg","components/navbar/Navbar.js","components/main/balance/Balance.js","components/main/tabs/Tabs.js","components/main/table/thead.js","components/main/table/trow.js","components/main/table/table.js","components/form/form.js","components/popup/Popup.js","components/main/charges/Charges.js","components/main/incomes/Incomes.js","components/main/Main.js","components/categories/Categories.js","components/charts/Charts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","src","Logo","alt","to","activeClassName","Balance","props","value","Tabs","TableHeader","type","TableRow","category","description","date","money","window","localStorage","setItem","JSON","stringify","income","Charges","Table","state","data","parse","getItem","isCharge","addNew","e","setState","dog","this","map","item","Component","Form","handleSubmit","event","preventDefault","loc","newArr","changeDate","target","name","id","onChange","placeholder","sum","onClick","Popup","closePopup","isPopup","showPopup","Incomes","Main","balance","reduce","path","component","Categories","Charts","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9ee1bcaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chichi.4219124a.jpg\";","import React from 'react';\r\nimport Logo from '../../img/chichi.jpg';\r\nimport './navbar.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className = \"navbar\">\r\n            <div className=\"chichi-logo\">\r\n                <img src={Logo} className = \"navbar_logo\" alt=\"app_logo\"/>\r\n                <span className=\"name-logo\">CHICHI</span>\r\n            </div>\r\n            <ul>\r\n                <li className=\"navbar-item\"> <NavLink to=\"/main\" activeClassName=\"active\" > Home </NavLink></li>\r\n                <li className=\"navbar-item\"> <NavLink to=\"/categories\" activeClassName=\"active\" > Categores </NavLink></li>\r\n                <li className=\"navbar-item\"> <NavLink to=\"/charts\" activeClassName=\"active\"> Charts </NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './balance.css';\r\n\r\n\r\nconst Balance = (props) => {\r\n    return(\r\n      <div className=\"balance-container\">\r\n        <h3>Balance</h3>\r\n    <div className=\"amount\">$ {props.value}</div> \r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Balance;","import React from 'react';\r\nimport './tabs.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Tabs = () => {\r\n    return(\r\n        <nav className = \"tab-items\">\r\n            <ul>\r\n                <li> <NavLink to=\"/charges\" activeClassName=\"active\" > Charges </NavLink></li>\r\n                <li> <NavLink to=\"/incomes\" activeClassName=\"active\" > Incomes </NavLink></li>\r\n            </ul>\r\n        </nav>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Tabs;","import React from 'react';\r\n\r\n\r\nfunction TableHeader({type}) {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n            <th>Category</th>\r\n            <th>Description</th>\r\n            <th>Date</th>\r\n            <th>{type}</th>\r\n            </tr>\r\n      </thead>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\nexport default TableHeader;","import React from 'react';\r\n\r\n\r\nfunction TableRow({category,description=\"\",date,money}) {\r\n    return (\r\n          <tr>\r\n            <td>{category}</td>\r\n            <td>{description}</td>\r\n            <td>{date}</td>\r\n            <td>{money}</td>\r\n          </tr>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\nexport default TableRow;","\r\nimport React, { Component } from 'react';\r\nimport TableHeader from './thead';\r\nimport TableRow from './trow';\r\n\r\nconst TableData = [\r\n  {\r\n    category: \"food\",\r\n    description: \"lemon\",\r\n    date: \"01-02-2020\",\r\n    income: 1200,\r\n    Charges: 1200\r\n  },\r\n  {\r\n    category: \"food\",\r\n    description: \"lemon\",\r\n    date: \"01-02-2020\",\r\n    income: 1200,\r\n    Charges: 1200\r\n  },\r\n  {\r\n    category: \"food\",\r\n    description: \"lemon\",\r\n    date: \"01-02-2020\",\r\n    income: 1200,\r\n    Charges: 1200\r\n  },\r\n  {\r\n    category: \"food\",\r\n    description: \"lemon\",\r\n    date: \"01-02-2020\",\r\n    income: 1200,\r\n    Charges: 1200\r\n  }\r\n]\r\n\r\n\r\nwindow.localStorage.setItem('data', JSON.stringify(TableData));\r\n\r\n\r\n\r\n\r\n\r\nclass Table extends Component {\r\n    state = {\r\n        data : JSON.parse(localStorage.getItem('data')),\r\n        isCharge : true\r\n    }\r\n    addNew = (e) => {\r\n        // console.log(this.state)\r\n        // console.log(e.target.category.value);\r\n        // console.log(e.target.description.value);\r\n        // console.log(e.target.date.value);\r\n        // console.log(e.target.money.value);\r\n       \r\n       this.setState({\r\n           dog: 'Chio'\r\n       })     \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n        \r\n              <table>\r\n                <TableHeader type = {this.state.isCharge ? \"Charges\" : \"Income\"} />\r\n    \r\n                <tbody>\r\n                {this.state.data.map(item => (\r\n                  <TableRow category = {item.category} description = {item.description} date = {item.date} money = {this.state.isCharge ? item.Charges : item.income} />))\r\n                }\r\n                </tbody>\r\n\r\n              </table>\r\n            </div>\r\n          );\r\n    }\r\n \r\n}\r\n\r\nexport default Table;\r\n","import React, { Component }  from 'react';\r\nimport '../popup/popup.css';\r\n\r\nclass Form extends Component  {\r\n    state = {\r\n        category: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        income: null,\r\n        Charges: null\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        \r\n        const loc = JSON.parse(localStorage.getItem('data'));\r\n        const newArr = [...loc,this.state];\r\n        window.localStorage.setItem('data', JSON.stringify(newArr)\r\n        );\r\n        \r\n       \r\n      }\r\n      changeDate = (event) => {\r\n        this.setState( {\r\n                [event.target.name]: event.target.value\r\n            }  )\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <form className=\"form\">\r\n                <div className=\"form_wrapper\">\r\n                    <div className=\"form_input\">\r\n                        {/* <label>Choose a category:</label> */}\r\n                        <select name=\"category\" id=\"pet-select\"  value={this.state.category} onChange = {this.changeDate}>\r\n                            <option value=\"\">--Please choose an option--</option>\r\n                            <option value=\"dog\">Dog</option>\r\n                            <option value=\"cat\">Cat</option>\r\n                            <option value=\"hamster\">Hamster</option>\r\n                            <option value=\"parrot\">Parrot</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form_input\">\r\n                        <label>Description:<input type=\"text\" name=\"description\" placeholder=\"\" value={this.state.description} onChange = {this.changeDate} /></label>\r\n                    </div>\r\n                    <div className=\"form_input\">\r\n                        <label> Sum:  <input type=\"number\" name=\"sum\" placeholder=\"0\" value={this.state.sum} onChange = {this.changeDate} /></label>\r\n                    </div>\r\n                    <div className=\"form_input\">\r\n                        <label>Start date: <input type=\"date\" id=\"date\" name=\"date\" placeholder=\"2018-07-22\" value={this.state.date} onChange = {this.changeDate} ></input></label>\r\n                    </div>\r\n                    <button type=\"onSubmit\" onClick={this.handleSubmit} className=\"form_addnew\">Add</button>\r\n                </div>\r\n            </form>\r\n          );\r\n    }\r\n\r\n    \r\n  }\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport Form from '../form/form';\r\nimport './popup.css';\r\n\r\nconst Popup = (props) => {\r\n\r\n    return (\r\n        <div className=\"popup\">\r\n            <button onClick = {props.closePopup} className=\"popup_close\">Close</button>\r\n            <h2>Add new item here</h2>\r\n            <Form/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Popup;","import React, { Component }  from 'react';\r\nimport Table from '../table/table';\r\nimport Popup from '../../popup/Popup';\r\n\r\nclass Charges extends Component {\r\n    state = {\r\n        isPopup: false\r\n    }\r\n    showPopup = () => {\r\n        this.setState({\r\n            isPopup : true\r\n        })\r\n    }\r\n    closePopup = () => {\r\n        this.setState({\r\n            isPopup : false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <h1>Charges</h1>\r\n            <Table/>\r\n            <button onClick={this.showPopup}>Add New</button>\r\n\r\n            {this.state.isPopup ? (<Popup closePopup={this.closePopup}/>) : null }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Charges;","import React from 'react';\r\nimport Table from '../table/table';\r\n\r\nconst Incomes = () => {\r\n    return(\r\n        <>\r\n        <h1>Incomes</h1>\r\n        <Table/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Incomes;","import React, { Component } from 'react';\r\nimport Balance from './balance/Balance';\r\nimport Tabs from './tabs/Tabs';\r\nimport Charges from './charges/Charges';\r\nimport Incomes from './incomes/Incomes';\r\nimport Button from './button/Button';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        balance: [...JSON.parse(localStorage.getItem('data'))].reduce((sum,item) => item.income+sum,0)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                {/* Main page */}\r\n                <Balance value={this.state.balance}/>\r\n\r\n                <BrowserRouter>\r\n            <div className=\"tab-items\">\r\n            <Tabs/>\r\n            <Route path=\"/charges\" component = {Charges}/>\r\n            <Route path=\"/incomes\" component = {Incomes}/>  \r\n            \r\n          </div>\r\n          {/* <div>\r\n          <Button/>\r\n            <Route path=\"/button\" component = {Button}/>\r\n            </div> */}\r\n        </BrowserRouter>\r\n         </div>\r\n            \r\n    )\r\n    }\r\n}\r\n\r\n\r\nexport default Main;","import React from 'react';\r\n\r\n\r\n\r\nconst Categories = () => {\r\n\r\n    return(\r\n        <div>\r\n            <h1>It's a Categories Page</h1>\r\n            <p>Categories of Cats and Dogs here!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Categories;","import React from 'react';\r\n\r\n\r\n\r\nconst Charts = () => {\r\n\r\n    return(\r\n        <div>\r\n            <h1>It's a Charts Page</h1>\r\n            <p>Diagrams of Cats and Dogs here!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Charts;","import React from 'react';\r\nimport Navbar from './components/navbar/Navbar';\r\nimport Main from './components/main/Main';\r\nimport Categories from './components/categories/Categories';\r\nimport Charts from './components/charts/Charts';\r\nimport './app.css';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"app_wrapper\">\r\n        <Navbar/>\r\n        <Route path=\"/main\" component = {Main}/>\r\n        <Route path=\"/categories\" component = {Categories}/>  \r\n        <Route path=\"/charts\" component = {Charts}/> \r\n      </div>\r\n      \r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}